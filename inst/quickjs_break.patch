--- sass_bundle.js	2024-05-31 23:17:16
+++ sass_bundle_patched.js	2024-05-31 23:35:41
@@ -66260,7 +66260,7 @@
       do {
         containsSpace.__late_helper$_value = containsTab.__late_helper$_value = false;
         nextIndentation.__late_helper$_value = 0;
-        for (; true;) {
+        breakout: for (; true;) {
           $label0$0: {
             _1_0 = t1.peekChar$0();
             if (32 === _1_0) {
@@ -66271,7 +66271,7 @@
               containsTab.__late_helper$_value = true;
               break $label0$0;
             }
-            break;
+            break breakout;
           }
           t2 = nextIndentation.__late_helper$_value;
           if (t2 === nextIndentation)
@@ -68342,7 +68342,7 @@
       addSingleExpression = new A.StylesheetParser__expression_addSingleExpression(_box_0, _this, resetState, resolveOperations);
       addOperator = new A.StylesheetParser__expression_addOperator(_box_0, _this, resolveOneOperation);
       resolveSpaceExpressions = new A.StylesheetParser__expression_resolveSpaceExpressions(_box_0, _this, resolveOperations);
-      for (t3 = type$.JSArray_Expression; true;) {
+      breakout: for (t3 = type$.JSArray_Expression; true;) {
         _this.whitespace$0();
         if (t1 && until.call$0())
           break;
@@ -68406,7 +68406,7 @@
               addSingleExpression.call$1(_this._importantExpression$0());
               break $label0$1;
             }
-            break;
+            break breakout;
           }
           continue;
         }
@@ -69269,7 +69269,7 @@
         t2 = t1._string_scanner$_position,
         t3 = new A.StringBuffer(""),
         buffer = new A.InterpolationBuffer(t3, A._setArrayType([], type$.JSArray_Object));
-      for (t4 = t1.string, t5 = t4.length, t6 = !omitComments; true;)
+        breakout: for (t4 = t1.string, t5 = t4.length, t6 = !omitComments; true;)
         $label0$0: {
           _1_0 = t1.peekChar$0();
           if (92 === _1_0) {
@@ -69302,13 +69302,13 @@
           }
           if (13 === _1_0 || 10 === _1_0 || 12 === _1_0) {
             if (_this.get$indented())
-              break;
+              break breakout;
             t7 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t7;
             break $label0$0;
           }
           if (33 === _1_0 || 59 === _1_0 || 123 === _1_0 || 125 === _1_0)
-            break;
+            break breakout;
           if (117 === _1_0 || 85 === _1_0) {
             t7 = t1._string_scanner$_position;
             if (!_this.scanIdentifier$1("url")) {
@@ -69330,7 +69330,7 @@
             break $label0$0;
           }
           if (_1_0 == null)
-            break;
+            break breakout;
           t7 = _this.lookingAtIdentifier$0();
           if (t7) {
             t7 = _this.identifier$0();
@@ -69352,7 +69352,7 @@
         t3 = new A.StringBuffer(""),
         buffer = new A.InterpolationBuffer(t3, A._setArrayType([], type$.JSArray_Object)),
         brackets = A._setArrayType([], type$.JSArray_int);
-      for (t4 = t1.string, t5 = t4.length, t6 = !allowColon, t7 = !allowSemicolon, wroteNewline = false; true;)
+        breakout: for (t4 = t1.string, t5 = t4.length, t6 = !allowColon, t7 = !allowSemicolon, wroteNewline = false; true;)
         $label0$0: {
           _1_0 = t1.peekChar$0();
           if (92 === _1_0) {
@@ -69427,7 +69427,7 @@
             t8 = true;
           }
           if (t8 && _this.get$indented())
-            break;
+            break breakout;
           if (_1_18_isSet)
             if (!_1_18)
               t8 = _1_20_isSet ? _1_20 : 12 === _1_0;
@@ -69453,7 +69453,7 @@
           }
           if (41 === _1_0 || 125 === _1_0 || 93 === _1_0) {
             if (brackets.length === 0)
-              break;
+              break breakout;
             bracket = brackets.pop();
             t1.expectChar$1(bracket);
             t8 = A.Primitives_stringFromCharCode(bracket);
@@ -69463,7 +69463,7 @@
           }
           if (59 === _1_0) {
             if (t7 && brackets.length === 0)
-              break;
+              break breakout;
             t8 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t8;
             wroteNewline = false;
@@ -69471,7 +69471,7 @@
           }
           if (58 === _1_0) {
             if (t6 && brackets.length === 0)
-              break;
+              break breakout;
             t8 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t8;
             wroteNewline = false;
@@ -69500,7 +69500,7 @@
             break $label0$0;
           }
           if (_1_0 == null)
-            break;
+            break breakout;
           t8 = _this.lookingAtIdentifier$0();
           if (t8) {
             t8 = _this.identifier$0();
@@ -73446,14 +73446,14 @@
     },
     _async_evaluate$_indexAfterImports$1(statements) {
       var t1, lastImport, i, _0_0;
-      for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
+      breakout: for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
         $label0$0: {
           _0_0 = t1.$index(statements, i);
           if (_0_0 instanceof A.ModifiableCssImport)
             break $label0$0;
           if (_0_0 instanceof A.ModifiableCssComment)
             continue;
-          break;
+          break breakout;
         }
         lastImport = i;
       }
@@ -81969,14 +81969,14 @@
     },
     _indexAfterImports$1(statements) {
       var t1, lastImport, i, _0_0;
-      for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
+      breakout: for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
         $label0$0: {
           _0_0 = t1.$index(statements, i);
           if (_0_0 instanceof A.ModifiableCssImport)
             break $label0$0;
           if (_0_0 instanceof A.ModifiableCssComment)
             continue;
-          break;
+          break breakout;
         }
         lastImport = i;
       }
@@ -91410,14 +91410,14 @@
     },
     _async_evaluate0$_indexAfterImports$1(statements) {
       var t1, lastImport, i, _0_0;
-      for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
+      breakout: for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
         $label0$0: {
           _0_0 = t1.$index(statements, i);
           if (_0_0 instanceof A.ModifiableCssImport0)
             break $label0$0;
           if (_0_0 instanceof A.ModifiableCssComment0)
             continue;
-          break;
+          break breakout;
         }
         lastImport = i;
       }
@@ -104366,14 +104366,14 @@
     },
     _evaluate0$_indexAfterImports$1(statements) {
       var t1, lastImport, i, _0_0;
-      for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
+      breakout: for (t1 = J.getInterceptor$asx(statements), lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
         $label0$0: {
           _0_0 = t1.$index(statements, i);
           if (_0_0 instanceof A.ModifiableCssImport0)
             break $label0$0;
           if (_0_0 instanceof A.ModifiableCssComment0)
             continue;
-          break;
+          break breakout;
         }
         lastImport = i;
       }
@@ -117246,7 +117246,7 @@
       do {
         containsSpace.__late_helper$_value = containsTab.__late_helper$_value = false;
         nextIndentation.__late_helper$_value = 0;
-        for (; true;) {
+        breakout: for (; true;) {
           $label0$0: {
             _1_0 = t1.peekChar$0();
             if (32 === _1_0) {
@@ -117257,7 +117257,7 @@
               containsTab.__late_helper$_value = true;
               break $label0$0;
             }
-            break;
+            break breakout;
           }
           t2 = nextIndentation.__late_helper$_value;
           if (t2 === nextIndentation)
@@ -118952,7 +118952,7 @@
         exponent = A._Cell$(),
         t1 = text.length,
         i = 0;
-      while (true) {
+      breakout: while (true) {
         if (!(i < t1)) {
           buffer = null;
           break;
@@ -118970,7 +118970,7 @@
           } else if (i > 2)
             buffer._contents = t2 + B.JSString_methods.substring$2(text, 2, i);
           exponent.__late_helper$_value = A.int_parse(B.JSString_methods.substring$2(text, i + 1, t1), null);
-          break;
+          break breakout;
         }
         ++i;
       }
@@ -122210,7 +122210,7 @@
       addSingleExpression = new A.StylesheetParser__expression_addSingleExpression0(_box_0, _this, resetState, resolveOperations);
       addOperator = new A.StylesheetParser__expression_addOperator0(_box_0, _this, resolveOneOperation);
       resolveSpaceExpressions = new A.StylesheetParser__expression_resolveSpaceExpressions0(_box_0, _this, resolveOperations);
-      for (t3 = type$.JSArray_Expression_2; true;) {
+      breakout: for (t3 = type$.JSArray_Expression_2; true;) {
         _this.whitespace$0();
         if (t1 && until.call$0())
           break;
@@ -122274,7 +122274,7 @@
               addSingleExpression.call$1(_this._stylesheet0$_importantExpression$0());
               break $label0$1;
             }
-            break;
+            break breakout;
           }
           continue;
         }
@@ -123137,7 +123137,7 @@
         t2 = t1._string_scanner$_position,
         t3 = new A.StringBuffer(""),
         buffer = new A.InterpolationBuffer0(t3, A._setArrayType([], type$.JSArray_Object));
-      for (t4 = t1.string, t5 = t4.length, t6 = !omitComments; true;)
+        breakout: for (t4 = t1.string, t5 = t4.length, t6 = !omitComments; true;)
         $label0$0: {
           _1_0 = t1.peekChar$0();
           if (92 === _1_0) {
@@ -123170,13 +123170,13 @@
           }
           if (13 === _1_0 || 10 === _1_0 || 12 === _1_0) {
             if (_this.get$indented())
-              break;
+              break breakout;
             t7 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t7;
             break $label0$0;
           }
           if (33 === _1_0 || 59 === _1_0 || 123 === _1_0 || 125 === _1_0)
-            break;
+            break breakout;
           if (117 === _1_0 || 85 === _1_0) {
             t7 = t1._string_scanner$_position;
             if (!_this.scanIdentifier$1("url")) {
@@ -123198,7 +123198,7 @@
             break $label0$0;
           }
           if (_1_0 == null)
-            break;
+            break breakout;
           t7 = _this.lookingAtIdentifier$0();
           if (t7) {
             t7 = _this.identifier$0();
@@ -123220,7 +123220,7 @@
         t3 = new A.StringBuffer(""),
         buffer = new A.InterpolationBuffer0(t3, A._setArrayType([], type$.JSArray_Object)),
         brackets = A._setArrayType([], type$.JSArray_int);
-      for (t4 = t1.string, t5 = t4.length, t6 = !allowColon, t7 = !allowSemicolon, wroteNewline = false; true;)
+        breakout: for (t4 = t1.string, t5 = t4.length, t6 = !allowColon, t7 = !allowSemicolon, wroteNewline = false; true;)
         $label0$0: {
           _1_0 = t1.peekChar$0();
           if (92 === _1_0) {
@@ -123295,7 +123295,7 @@
             t8 = true;
           }
           if (t8 && _this.get$indented())
-            break;
+            break breakout;
           if (_1_18_isSet)
             if (!_1_18)
               t8 = _1_20_isSet ? _1_20 : 12 === _1_0;
@@ -123321,7 +123321,7 @@
           }
           if (41 === _1_0 || 125 === _1_0 || 93 === _1_0) {
             if (brackets.length === 0)
-              break;
+              break breakout;
             bracket = brackets.pop();
             t1.expectChar$1(bracket);
             t8 = A.Primitives_stringFromCharCode(bracket);
@@ -123331,7 +123331,7 @@
           }
           if (59 === _1_0) {
             if (t7 && brackets.length === 0)
-              break;
+              break breakout;
             t8 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t8;
             wroteNewline = false;
@@ -123339,7 +123339,7 @@
           }
           if (58 === _1_0) {
             if (t6 && brackets.length === 0)
-              break;
+              break breakout;
             t8 = A.Primitives_stringFromCharCode(t1.readChar$0());
             t3._contents += t8;
             wroteNewline = false;
@@ -123368,7 +123368,7 @@
             break $label0$0;
           }
           if (_1_0 == null)
-            break;
+            break breakout;
           t8 = _this.lookingAtIdentifier$0();
           if (t8) {
             t8 = _this.identifier$0();
